[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fabian Prettenthaler",
    "section": "",
    "text": "Welcome to my academic website. I am a PhD student at the University of Vienna.\nI’m particularly intrigued by the dynamics of life cycles, financial constraints, and broader macroeconomic principles. I employ a blend of empirical and quantitative methodologies to explore and address my research questions."
  },
  {
    "objectID": "index.html#interests",
    "href": "index.html#interests",
    "title": "Fabian Prettenthaler",
    "section": "Interests",
    "text": "Interests\n\nWealth inequality\nLife-cycle dynamics\nHeterogeneous agents"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Fabian Prettenthaler",
    "section": "Education",
    "text": "Education\nUniversity of Vienna\n\nPhD in Economics | 2021 - present\nMSc in Economics | 2018 - 2021\n\nVienna University of Business and Economics\n\nBSc in Economics | 2014 - 2018"
  },
  {
    "objectID": "index.html#work-in-progress",
    "href": "index.html#work-in-progress",
    "title": "Fabian Prettenthaler",
    "section": "Work in progress",
    "text": "Work in progress\n\nThe Real Estate Transfer Tax and Financial Constraints | Details\nHeterogenous Risk Preferences, Entrepreneurship, and Wealth Inequality |  Abstract  \n\n\nThis paper studies the role of heterogeneous risk preferences in shaping entrepreneurial decisions and their implications for wealth inequality. We examine how individuals’ risk attitudes guide their choice between becoming a risk-bearing entrepreneur and a wage worker with a more stable income. To empirically ground our study, we use self-reported risk attitudes among the German workforce based on data from the German Socioeconomic Panel (GSOEP) and estimate their impact on the likelihood of workers transitioning into self-employment. Our findings highlight that risk tolerance is a key determinant in opting for entrepreneurship. We further build a life-cycle model of occupational choice that features heterogeneous risk preferences and explore how these choices influence savings/investment and wealth accumulation. Our preliminary results reveal that a model featuring heterogeneous risk preferences not only successfully captures the distribution of wealth in Germany, but also does so more accurately compared to models assuming uniform risk attitudes across individuals.\n\n\n\njoint with B Hochmuth, and M Merz (both University of Vienna)"
  },
  {
    "objectID": "index.html#teaching",
    "href": "index.html#teaching",
    "title": "Fabian Prettenthaler",
    "section": "Teaching",
    "text": "Teaching\n\nUE Applied Macroeconomics (MA) 2022W, 2023W\n\nLecturer\n\nKU Advanced Macroeconomics (MA) 2023S, 2024S\n\nTA for Monika Merz"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Research",
    "section": "",
    "text": "The Real Estate Transfer Tax and Financial Constraints\n\n\n\nWork in Progress\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/RETT/index.html",
    "href": "posts/RETT/index.html",
    "title": "The Real Estate Transfer Tax and Financial Constraints",
    "section": "",
    "text": "In Germany, households tend to maintain their house size as they age, even when faced with financial constraints. This reluctance to adjust might be attributed to the high transfer taxes imposed on real estate, which in turn limit the liquidity of the real estate market. My project aims to delve into the shifts in consumption behavior, particularly during retirement, by examining the impact of reduced real estate transfer taxes. I’m using micro data from Germany to gain detailed insights and employ a life-cycle model featuring heterogeneous agents to scrutinize consumption patterns across different life stages.\n\nPoster"
  },
  {
    "objectID": "teaching.html",
    "href": "teaching.html",
    "title": "Teaching",
    "section": "",
    "text": "#| standalone: true\n#| viewerHeight: 600\n\nlibrary(shiny)\nlibrary(ggplot2)\n\n# Define UI for application that draws a histogram\nui &lt;- fluidPage(\n\n    # Application title\n    titlePanel(\"Solow Growth Model\"),\n    \n\n    # Sidebar with a slider input for number of bins \n    sidebarLayout(\n        sidebarPanel(\n          p(\"This is a interactive way for you to understand the comparative statics in the Solow Growth model you saw in the main lecture.\"),\n          p(\"The production function in this economy look as follows:\"),\n          withMathJax(\"$$Y=A*F(K,L)=f(k)=k^\\\\alpha \\\\text{ , with } A=1$$ \"),\n          p(\"Equivalent to the lecture there is no population growth and technological progress.\"),\n          p(\"The black lines corespond to an economy where\"),\n          withMathJax(\"$$\\\\delta = 0.02$$ $$s = 0.4$$ $$\\\\alpha = 0.3$$\"),\n            sliderInput(\"delta\",\n                        \"Depreciation Rate:\",\n                        min = 0.015,\n                        max = 0.1,\n                        value = 0.02),\n            sliderInput(\"s\",\n                        \"Savings Rate:\",\n                        min = 0,\n                        max = 0.5,\n                        value = 0.4),\n            sliderInput(\"alpha\",\n                        \"Alpha:\",\n                        min = 0,\n                        max = 0.35,\n                        value = 0.3),\n          checkboxInput(\"somevalue\", \"Show Production Function\", FALSE)\n        ),\n\n        # Show a plot of the generated distribution\n        mainPanel(\n           plotOutput(\"SolowPlot\"),\n           uiOutput(\"values\")\n        )\n    )\n)\n\n# Define server logic required to draw a histogram\nserver &lt;- function(input, output) {\n\n    output$SolowPlot &lt;- renderPlot({\n        # create variables for the plot\n        k_ss &lt;-  (input$s/input$delta)^(1/(1-input$alpha))\n        k_gold &lt;- (input$alpha/input$delta)^(1/(1-input$alpha))\n        k &lt;-  seq(0,100,0.01)\n        y &lt;- k^input$alpha\n        i &lt;- y*input$s\n        break_even &lt;- input$delta*k\n        i_ss = (k_ss^input$alpha)*input$s\n        i_gold = k_gold*input$delta\n        ### also origins to see changes\n        k_ss_o &lt;-  (0.4/0.02)^(1/(1-0.3))\n        k_gold_o &lt;- (0.3/0.02)^(1/(1-0.3))\n        y_o &lt;- k^0.3\n        i_o &lt;- y_o*0.4\n        break_even_o &lt;- 0.02*k\n        i_ss_o = (k_ss_o^0.3)*0.4\n        i_gold_o = k_gold_o*0.02\n        \n        data &lt;- cbind(k,i,break_even)\n        data &lt;- data.frame(data)\n        \n        if(input$somevalue==FALSE){\n        \n        ggplot(data, aes(x=k),color=\"blue\") +\n          geom_line(aes(y=i,color=\"blue\"), show.legend = F) +\n          geom_line(aes(y=break_even,color=\"red\"), show.legend = F) +\n          geom_line(aes(y=i_o), show.legend = F) +\n          geom_line(aes(y=break_even_o), show.legend = F) +\n          geom_segment(aes(x = k_ss, y = 0, xend = k_ss, yend =i_ss),color=\"red\") +\n          geom_segment(aes(x = k_gold, y = 0, xend = k_gold, yend =i_gold),color=\"blue\") +\n          geom_segment(aes(x = k_ss_o, y = 0, xend = k_ss_o, yend =i_ss_o)) +\n          geom_segment(aes(x = k_gold_o, y = 0, xend = k_gold_o, yend =i_gold_o)) +\n         annotate(\"text\", x = k_ss*1.001, y = -0.05, label = \"k*'\", size = 4) +\n          annotate(\"text\", x = k_gold*1.001, y = -0.05, label = \"k**'\", size = 4) +\n          annotate(\"text\", x = k_ss_o*1.001, y = -0.05, label = \"k*\", size = 4) +\n          annotate(\"text\", x = k_gold_o*1.001, y = -0.05, label = \"k**\", size = 4) +\n          annotate(\"text\", x = max(k)*1.05, y = max(break_even),\n                   label = \"~delta~k\", parse = TRUE, size = 4,color=\"blue\") +\n          annotate(\"text\", x = max(k)*1.05, y = max(i),\n                   label = \"s*f(k)\", parse = TRUE,\n                   size = 4,color=\"red\") +\n          annotate(\"text\", x = max(k)*1.05, y = max(break_even_o),\n                   label = \"~delta~k\", parse = TRUE, size = 4) +\n          annotate(\"text\", x = max(k)*1.05, y = max(i_o),\n                   label = \"s*f(k)\", parse = TRUE,\n                   size = 4) +\n          xlab(\"Capital\") +\n          ylab(\"Investment\") +\n          theme_classic() }else{\n            ggplot(data, aes(x=k)) +\n              geom_line(aes(y=i,color=\"blue\"), show.legend = F) +\n              geom_line(aes(y=break_even,color=\"red\"), show.legend = F) +\n              geom_line(aes(y=y,color=\"orange\"), show.legend = F) +\n              geom_line(aes(y=i_o), show.legend = F) +\n              geom_line(aes(y=break_even_o), show.legend = F) +\n              geom_line(aes(y=y_o), show.legend = F) +\n              geom_segment(aes(x = k_ss, y = 0, xend = k_ss, yend =i_ss),color=\"red\") +\n              geom_segment(aes(x = k_gold, y = 0, xend = k_gold, yend =i_gold),color=\"blue\") +\n              geom_segment(aes(x = k_ss_o, y = 0, xend = k_ss_o, yend =i_ss_o)) +\n              geom_segment(aes(x = k_gold_o, y = 0, xend = k_gold_o, yend =i_gold_o)) +\n              annotate(\"text\", x = k_ss*1.001, y = -0.05, label = \"k*'\", size = 4) +\n              annotate(\"text\", x = k_gold*1.001, y = -0.05, label = \"k**'\", size = 4) +\n              annotate(\"text\", x = k_ss_o*1.001, y = -0.05, label = \"k*\", size = 4) +\n              annotate(\"text\", x = k_gold_o*1.001, y = -0.05, label = \"k**\", size = 4) +\n              annotate(\"text\", x = max(k)*1.05, y = max(break_even),\n                       label = \"~delta~k\", parse = TRUE, size = 4,color=\"blue\") +\n              annotate(\"text\", x = max(k)*1.05, y = max(i),\n                       label = \"s*f(k)\", parse = TRUE,\n                       size = 4,color=\"red\") +\n              annotate(\"text\", x = max(k)*1.05, y = max(y),\n                       label = \"f(k)\", parse = TRUE,\n                       size = 4,color=\"orange\") +\n              annotate(\"text\", x = max(k)*1.05, y = max(break_even_o),\n                       label = \"~delta~k\", parse = TRUE, size = 4) +\n              annotate(\"text\", x = max(k)*1.05, y = max(i_o),\n                       label = \"s*f(k)\", parse = TRUE,\n                       size = 4) +\n              annotate(\"text\", x = max(k)*1.05, y = max(y_o),\n                       label = \"f(k)\", parse = TRUE,\n                       size = 4) +\n              xlab(\"Capital\") +\n              ylab(\"Investment\") +\n              scale_color_manual(values = c(\"blue\", \"red\", \"orange\")) +\n              theme_classic() \n          }\n    })\n    output$values &lt;- renderUI({\n      k_ss &lt;-  round((input$s/input$delta)^(1/(1-input$alpha)),2)\n      k_gold &lt;- round((input$alpha/input$delta)^(1/(1-input$alpha)),2)\n      withMathJax(paste0(\"$$k^*=\", k_ss,\"$$\", \"$$k^{**}=\", k_gold,\"$$\"))\n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)"
  }
]